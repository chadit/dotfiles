# either copy to $HOME or symlink it via ln -s /path/to/file /path/to/symlink
# ln -sf $HOME/Dropbox/Linux/Scripts/Home/.tmux.conf $HOME/.tmux.conf

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-cpu'

# ================ General Config ====================
# Change prefix to `ctrl + a` instead of default `ctrl + b`
set-option -g prefix C-a
unbind-key C-a

# continues to send C -a to application if pressed twice
bind-key C-a send-prefix

# setting the delay between prefix and command
set -s escape-time 0

# ===========================================

# tmux-cpu settings
set -g @cpu_low_icon "ᚋ"
set -g @cpu_medium_icon "ᚌ"
set -g @cpu_high_icon "ᚍ"

# set shell
set -g default-shell /bin/zsh

# Initial setup - Ensure terminal starts with its own colour scheme
set -g default-terminal xterm-256color
set -g status-keys vi

#enable vi keys (uses vim navigation keys instead of arrows)
setw -g mode-keys vi

#set copy paste mode to be like vim
#bind Escape copy-mode
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection
#unbind p
#bind p paste-buffer

# ================ Copy mode ================
# -- begins selection from curser (works the same way as `space`, but is more VI)
bind-key -T copy-mode-vi 'v' send -X begin-selection
# -- Selects the entire line just like VI
bind-key -T copy-mode-vi 'V' send -X select-line
# -- when in copy mode `prefix + [`, highlight text to copy, push `y` and it will copy to xclipboard for paste outside tmux
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# copy paste support outside tmux
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard" \; display-message "copied"

# -- past from external source into tmux (prefix then ctrl + p)
unbind-key C-p
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; display-message "copied to buffer"
# ===========================================

# ============= Pane Navigation =============
# Use alt-arrow keys to switch panes (default is `prefix + arrow`) as I learn VIM more, this will probably go away
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D 

# Uses prefix + jkli to be similar to vim to switch between panes
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Resize pane by 5, prfix, shift + letter, -r is repeatable flag
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ===========================================


# Use alt-arrow keys to switch windows (default is `prefix + n`)
bind -n S-Left  previous-window
bind -n S-Right next-window

# Uses prefix + jkli to be similar to vim to switch between windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# Enable mouse mode (tmux 2.1 and above)
# this enables clicking panels and resize with the mouse
# this also enables switching windows
set -g mouse on

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# Enable UTF-8 support in status bar
set -g status on

# Watch for activity in background windows
setw -g monitor-activity on
set -g visual-activity on

# Increase scrollback lines
set -g history-limit 30000

# Renumber windows automatically after removing a window
set-option -g renumber-windows on

# Terminal overrides
set -g set-clipboard on
set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:colors=256,*256col*:Tc,*:Ms"

# add support for truecolor
# more info here: https://github.com/ninrod/tricks/blob/master/shell/tmux.md#the-standard-way-since-tmux-22
# tmux issue: https://github.com/tmux/tmux/issues/34
# fixed since version 2.2
# credits to github user sunaku: http://github.com/sunaku 
# usage instructions: http://sunaku.github.io/tmux-24bit-color.html#usage
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Theme
set -g status-bg "colour59"
#set -g message-command-fg "colour117"
#set -g message-command-style "colour117"
#set -g pane-active-border-fg "colour215"
#set -g pane-active-border-status "colour215"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g status-right-length "100"
#set -g status-right-attr "none"
#set -g status-attr "none"
#set -g status-left-attr "none"
set -g message-command-style "fg=colour249,bg=colour237"
set -g pane-active-border-style "fg=colour150"
set -g status-style "bg=colour238,none"
set -g message-style "fg=colour249,bg=colour237"
set -g pane-border-style "fg=colour237"
set -g status-left "#[fg=colour236,bg=colour150] #S #[fg=colour150,bg=colour238,nobold,nounderscore,noitalics]#(head -1 $HOME/.vim/sync-status)"
set -g status-right "#[fg=colour249,bg=colour238] CPU: #{cpu_icon} #{cpu_percentage} #[fg=colour236,bg=colour150] #h "

#setw -g window-status-attr "none"
#Ssetw -g window-status-attr "none"
setw -g window-status-separator ""
setw -g window-status-activity-style "fg=colour150,bg=colour238,underscore"
setw -g window-status-style "fg=colour150,bg=colour238,none"
setw -g window-status-format "#[fg=colour249,bg=colour238] #I #W "
setw -g window-status-current-format "#[fg=colour150,bold,bg=colour237] #I #W "


# Reload Config
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
